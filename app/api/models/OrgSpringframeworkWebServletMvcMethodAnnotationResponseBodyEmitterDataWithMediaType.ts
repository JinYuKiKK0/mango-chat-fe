/* tslint:disable */
/* eslint-disable */
/**
 * mangochat
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaTypeMediaType } from './OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaTypeMediaType';
import {
    OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaTypeMediaTypeFromJSON,
    OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaTypeMediaTypeFromJSONTyped,
    OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaTypeMediaTypeToJSON,
    OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaTypeMediaTypeToJSONTyped,
} from './OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaTypeMediaType';

/**
 * org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.DataWithMediaType
 * @export
 * @interface OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaType
 */
export interface OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaType {
    /**
     * 
     * @type {object}
     * @memberof OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaType
     */
    data?: object;
    /**
     * 
     * @type {OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaTypeMediaType}
     * @memberof OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaType
     */
    mediaType?: OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaTypeMediaType | null;
}

/**
 * Check if a given object implements the OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaType interface.
 */
export function instanceOfOrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaType(value: object): value is OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaType {
    return true;
}

export function OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaTypeFromJSON(json: any): OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaType {
    return OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaTypeFromJSONTyped(json, false);
}

export function OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaType {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'] == null ? undefined : json['data'],
        'mediaType': json['mediaType'] == null ? undefined : OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaTypeMediaTypeFromJSON(json['mediaType']),
    };
}

export function OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaTypeToJSON(json: any): OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaType {
    return OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaTypeToJSONTyped(json, false);
}

export function OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaTypeToJSONTyped(value?: OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaType | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': value['data'],
        'mediaType': OrgSpringframeworkWebServletMvcMethodAnnotationResponseBodyEmitterDataWithMediaTypeMediaTypeToJSON(value['mediaType']),
    };
}

