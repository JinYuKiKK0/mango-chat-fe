/* tslint:disable */
/* eslint-disable */
/**
 * mangochat
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OrgSpringframeworkHttpMediaTypeParameters } from './OrgSpringframeworkHttpMediaTypeParameters';
import {
    OrgSpringframeworkHttpMediaTypeParametersFromJSON,
    OrgSpringframeworkHttpMediaTypeParametersFromJSONTyped,
    OrgSpringframeworkHttpMediaTypeParametersToJSON,
    OrgSpringframeworkHttpMediaTypeParametersToJSONTyped,
} from './OrgSpringframeworkHttpMediaTypeParameters';

/**
 * 
 * @export
 * @interface OrgSpringframeworkHttpMediaType
 */
export interface OrgSpringframeworkHttpMediaType {
    /**
     * 
     * @type {string}
     * @memberof OrgSpringframeworkHttpMediaType
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof OrgSpringframeworkHttpMediaType
     */
    subtype?: string;
    /**
     * 
     * @type {OrgSpringframeworkHttpMediaTypeParameters}
     * @memberof OrgSpringframeworkHttpMediaType
     */
    parameters?: OrgSpringframeworkHttpMediaTypeParameters;
    /**
     * 
     * @type {string}
     * @memberof OrgSpringframeworkHttpMediaType
     */
    toStringValue?: string | null;
}

/**
 * Check if a given object implements the OrgSpringframeworkHttpMediaType interface.
 */
export function instanceOfOrgSpringframeworkHttpMediaType(value: object): value is OrgSpringframeworkHttpMediaType {
    return true;
}

export function OrgSpringframeworkHttpMediaTypeFromJSON(json: any): OrgSpringframeworkHttpMediaType {
    return OrgSpringframeworkHttpMediaTypeFromJSONTyped(json, false);
}

export function OrgSpringframeworkHttpMediaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrgSpringframeworkHttpMediaType {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'subtype': json['subtype'] == null ? undefined : json['subtype'],
        'parameters': json['parameters'] == null ? undefined : OrgSpringframeworkHttpMediaTypeParametersFromJSON(json['parameters']),
        'toStringValue': json['toStringValue'] == null ? undefined : json['toStringValue'],
    };
}

export function OrgSpringframeworkHttpMediaTypeToJSON(json: any): OrgSpringframeworkHttpMediaType {
    return OrgSpringframeworkHttpMediaTypeToJSONTyped(json, false);
}

export function OrgSpringframeworkHttpMediaTypeToJSONTyped(value?: OrgSpringframeworkHttpMediaType | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'subtype': value['subtype'],
        'parameters': OrgSpringframeworkHttpMediaTypeParametersToJSON(value['parameters']),
        'toStringValue': value['toStringValue'],
    };
}

