/* tslint:disable */
/* eslint-disable */
/**
 * mangochat
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 角色响应
 * @export
 * @interface RoleResponse
 */
export interface RoleResponse {
    /**
     * 角色ID
     * @type {number}
     * @memberof RoleResponse
     */
    id?: number;
    /**
     * 角色名称
     * @type {string}
     * @memberof RoleResponse
     */
    name?: string;
    /**
     * 角色类型
     * @type {number}
     * @memberof RoleResponse
     */
    roleType?: RoleResponseRoleTypeEnum;
    /**
     * 角色优先级（数值越小权限越高）
     * @type {number}
     * @memberof RoleResponse
     */
    rank?: number;
    /**
     * 是否为新用户的固有角色
     * @type {boolean}
     * @memberof RoleResponse
     */
    autoAdd?: boolean;
    /**
     * 创建时间
     * @type {Date}
     * @memberof RoleResponse
     */
    createdAt?: Date;
    /**
     * 更新时间
     * @type {Date}
     * @memberof RoleResponse
     */
    updatedAt?: Date;
}


/**
 * @export
 */
export const RoleResponseRoleTypeEnum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2
} as const;
export type RoleResponseRoleTypeEnum = typeof RoleResponseRoleTypeEnum[keyof typeof RoleResponseRoleTypeEnum];


/**
 * Check if a given object implements the RoleResponse interface.
 */
export function instanceOfRoleResponse(value: object): value is RoleResponse {
    return true;
}

export function RoleResponseFromJSON(json: any): RoleResponse {
    return RoleResponseFromJSONTyped(json, false);
}

export function RoleResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoleResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'roleType': json['roleType'] == null ? undefined : json['roleType'],
        'rank': json['rank'] == null ? undefined : json['rank'],
        'autoAdd': json['autoAdd'] == null ? undefined : json['autoAdd'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
    };
}

export function RoleResponseToJSON(json: any): RoleResponse {
    return RoleResponseToJSONTyped(json, false);
}

export function RoleResponseToJSONTyped(value?: RoleResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'roleType': value['roleType'],
        'rank': value['rank'],
        'autoAdd': value['autoAdd'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

