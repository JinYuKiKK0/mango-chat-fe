/* tslint:disable */
/* eslint-disable */
/**
 * mangochat
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MapString } from './MapString';
import {
    MapStringFromJSON,
    MapStringFromJSONTyped,
    MapStringToJSON,
    MapStringToJSONTyped,
} from './MapString';

/**
 * 
 * @export
 * @interface MediaType
 */
export interface MediaType {
    /**
     * 
     * @type {string}
     * @memberof MediaType
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaType
     */
    subtype?: string;
    /**
     * 
     * @type {MapString}
     * @memberof MediaType
     */
    parameters?: MapString;
    /**
     * 
     * @type {string}
     * @memberof MediaType
     */
    toStringValue?: string | null;
}

/**
 * Check if a given object implements the MediaType interface.
 */
export function instanceOfMediaType(value: object): value is MediaType {
    return true;
}

export function MediaTypeFromJSON(json: any): MediaType {
    return MediaTypeFromJSONTyped(json, false);
}

export function MediaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaType {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'subtype': json['subtype'] == null ? undefined : json['subtype'],
        'parameters': json['parameters'] == null ? undefined : MapStringFromJSON(json['parameters']),
        'toStringValue': json['toStringValue'] == null ? undefined : json['toStringValue'],
    };
}

export function MediaTypeToJSON(json: any): MediaType {
    return MediaTypeToJSONTyped(json, false);
}

export function MediaTypeToJSONTyped(value?: MediaType | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'subtype': value['subtype'],
        'parameters': MapStringToJSON(value['parameters']),
        'toStringValue': value['toStringValue'],
    };
}

